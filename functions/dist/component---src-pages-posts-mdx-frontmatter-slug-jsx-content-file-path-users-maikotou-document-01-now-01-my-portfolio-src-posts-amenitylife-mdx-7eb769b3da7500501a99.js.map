{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-jsx-content-file-path-users-maikotou-document-01-now-01-my-portfolio-src-posts-amenitylife-mdx-7eb769b3da7500501a99.js","mappings":"8IAGA,SAASA,EAAkBC,GACzB,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,MAAO,CAC1EC,MAAO,cACND,EAAAA,cAAoB,KAAM,KAAM,YAAaA,EAAAA,cAAoB,KAAM,KAAMA,EAAAA,cAAoB,KAAM,KAAM,YAAa,KAAMA,EAAAA,cAAoB,KAAM,KAAM,aAAc,KAAMA,EAAAA,cAAoB,KAAM,KAAM,UAAW,KAAMA,EAAAA,cAAoB,KAAM,KAAM,OAAQ,KAAMA,EAAAA,cAAoB,KAAM,KAAM,QAAS,KAAMA,EAAAA,cAAoB,KAAM,KAAM,SAAU,KAAMA,EAAAA,cAAoB,MAAO,CAC9YC,MAAO,cACND,EAAAA,cAAoB,KAAM,KAAM,UAAWA,EAAAA,cAAoB,KAAM,KAAMA,EAAAA,cAAoB,KAAM,KAAM,eAChH,CAKA,IAJA,SAAoBD,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOG,QAASC,GAAaC,OAAOC,OAAO,CAAC,GAAGC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOJ,EAAYH,EAAAA,cAAoBG,EAAWJ,EAAOC,EAAAA,cAAoBF,EAAmBC,IAAUD,GAC5G,C,8FCmBO,MAAMU,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBF,GAC/B,MAAMG,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAfD,EACFA,EAAWG,GAGb,IAAIA,KAAsBH,IAChC,CAACG,EAAmBH,GACzB,CAGA,MAAMI,EAAc,CAAC,EAQd,SAASC,GAAY,WAACL,EAAU,SAAEM,EAAQ,qBAAEC,IACjD,IAAIC,EAAgBN,EAAiBF,GAMrC,OAJIO,IACFC,EAAgBR,GAAcI,GAGzB,gBACLH,EAAWQ,SACX,CAACC,MAAOF,GACRF,EAEJ,C","sources":["webpack://my-gatsby-site/./src/posts/amenitylife.mdx","webpack://my-gatsby-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    class: \"block-list\"\n  }, React.createElement(\"h4\", null, \"involved\"), React.createElement(\"ul\", null, React.createElement(\"li\", null, \"Frontend\"), \"\\n\", React.createElement(\"li\", null, \"Direction\"), \"\\n\", React.createElement(\"li\", null, \"Design\"), \"\\n\", React.createElement(\"li\", null, \"CMS\"), \"\\n\", React.createElement(\"li\", null, \"Form\"), \"\\n\", React.createElement(\"li\", null, \"SEO\"))), \"\\n\", React.createElement(\"div\", {\n    class: \"block-list\"\n  }, React.createElement(\"h4\", null, \"system\"), React.createElement(\"ul\", null, React.createElement(\"li\", null, \"Wordpress\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","React","class","wrapper","MDXLayout","Object","assign","_provideComponents","components","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","children","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}